<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ApinihanDataSet" targetNamespace="http://tempuri.org/ApinihanDataSet.xsd" xmlns:mstns="http://tempuri.org/ApinihanDataSet.xsd" xmlns="http://tempuri.org/ApinihanDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="ApinihanConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ApinihanConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Apinihan.My.MySettings.GlobalReference.Default.ApinihanConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AssignmentTableAdapter" GeneratorDataComponentClassName="AssignmentTableAdapter" Name="Assignment" UserDataComponentName="AssignmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Assignment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Assignment] WHERE (([ManagerID] = @Original_ManagerID) AND ([WorkerID] = @Original_WorkerID) AND ([AssignmentDateFrom] = @Original_AssignmentDateFrom) AND ([AssignmentDateTo] = @Original_AssignmentDateTo))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_AssignmentDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateFrom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_AssignmentDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateTo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Assignment] ([ManagerID], [WorkerID], [AssignmentDateFrom], [AssignmentDateTo]) VALUES (@ManagerID, @WorkerID, @AssignmentDateFrom, @AssignmentDateTo);
SELECT ManagerID, WorkerID, AssignmentDateFrom, AssignmentDateTo FROM Assignment WHERE (AssignmentDateFrom = @AssignmentDateFrom) AND (AssignmentDateTo = @AssignmentDateTo) AND (ManagerID = @ManagerID) AND (WorkerID = @WorkerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@AssignmentDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@AssignmentDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ManagerID, WorkerID, AssignmentDateFrom, AssignmentDateTo FROM dbo.Assignment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Assignment] SET [ManagerID] = @ManagerID, [WorkerID] = @WorkerID, [AssignmentDateFrom] = @AssignmentDateFrom, [AssignmentDateTo] = @AssignmentDateTo WHERE (([ManagerID] = @Original_ManagerID) AND ([WorkerID] = @Original_WorkerID) AND ([AssignmentDateFrom] = @Original_AssignmentDateFrom) AND ([AssignmentDateTo] = @Original_AssignmentDateTo));
SELECT ManagerID, WorkerID, AssignmentDateFrom, AssignmentDateTo FROM Assignment WHERE (AssignmentDateFrom = @AssignmentDateFrom) AND (AssignmentDateTo = @AssignmentDateTo) AND (ManagerID = @ManagerID) AND (WorkerID = @WorkerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@AssignmentDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@AssignmentDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_AssignmentDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateFrom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_AssignmentDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AssignmentDateTo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ManagerID" DataSetColumn="ManagerID" />
              <Mapping SourceColumn="WorkerID" DataSetColumn="WorkerID" />
              <Mapping SourceColumn="AssignmentDateFrom" DataSetColumn="AssignmentDateFrom" />
              <Mapping SourceColumn="AssignmentDateTo" DataSetColumn="AssignmentDateTo" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Assignment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ManagerID, WorkerID, AssignmentDateFrom, AssignmentDateTo
FROM     Assignment
WHERE  (WorkerID LIKE @WorkerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="WorkerID" ColumnName="WorkerID" DataSourceName="Apinihan.dbo.Assignment" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Assignment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy2" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy2" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ManagerID, WorkerID, AssignmentDateFrom, AssignmentDateTo
FROM     Assignment
WHERE  (AssignmentDateFrom BETWEEN @AssignmentDateFrom AND @AssignmentDateTo) OR
                  (AssignmentDateTo BETWEEN @AssignmentDateFrom AND @AssignmentDateTo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AssignmentDateFrom" ColumnName="AssignmentDateFrom" DataSourceName="Apinihan.dbo.Assignment" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@AssignmentDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="AssignmentDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AssignmentDateTo" ColumnName="AssignmentDateFrom" DataSourceName="Apinihan.dbo.Assignment" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@AssignmentDateTo" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="AssignmentDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookTableAdapter" GeneratorDataComponentClassName="BookTableAdapter" Name="Book" UserDataComponentName="BookTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Book" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Book] WHERE (([EventID] = @Original_EventID) AND ([PerformerID] = @Original_PerformerID) AND ([BookDateFrom] = @Original_BookDateFrom) AND ([BookDateTo] = @Original_BookDateTo))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_BookDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateFrom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_BookDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateTo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Book] ([EventID], [PerformerID], [BookDateFrom], [BookDateTo]) VALUES (@EventID, @PerformerID, @BookDateFrom, @BookDateTo);
SELECT EventID, PerformerID, BookDateFrom, BookDateTo FROM Book WHERE (BookDateFrom = @BookDateFrom) AND (BookDateTo = @BookDateTo) AND (EventID = @EventID) AND (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@BookDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@BookDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EventID, PerformerID, BookDateFrom, BookDateTo FROM dbo.Book</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Book] SET [EventID] = @EventID, [PerformerID] = @PerformerID, [BookDateFrom] = @BookDateFrom, [BookDateTo] = @BookDateTo WHERE (([EventID] = @Original_EventID) AND ([PerformerID] = @Original_PerformerID) AND ([BookDateFrom] = @Original_BookDateFrom) AND ([BookDateTo] = @Original_BookDateTo));
SELECT EventID, PerformerID, BookDateFrom, BookDateTo FROM Book WHERE (BookDateFrom = @BookDateFrom) AND (BookDateTo = @BookDateTo) AND (EventID = @EventID) AND (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@BookDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@BookDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_BookDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateFrom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_BookDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BookDateTo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EventID" DataSetColumn="EventID" />
              <Mapping SourceColumn="PerformerID" DataSetColumn="PerformerID" />
              <Mapping SourceColumn="BookDateFrom" DataSetColumn="BookDateFrom" />
              <Mapping SourceColumn="BookDateTo" DataSetColumn="BookDateTo" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Book" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT EventID, PerformerID, BookDateFrom, BookDateTo
FROM     Book
WHERE  (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PerformerID" ColumnName="PerformerID" DataSourceName="Apinihan.dbo.Book" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Book" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EventID, PerformerID, BookDateFrom, BookDateTo FROM dbo.Book
WHERE PerformerID = @PerformerID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PerformerID" ColumnName="PerformerID" DataSourceName="Apinihan.dbo.Book" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Book" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy2" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy2" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillBy2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EventID, PerformerID, BookDateFrom, BookDateTo
FROM     Book
WHERE  (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PerformerID" ColumnName="PerformerID" DataSourceName="Apinihan.dbo.Book" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomerTableAdapter" GeneratorDataComponentClassName="CustomerTableAdapter" Name="Customer" UserDataComponentName="CustomerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Customer] WHERE (([CustomerID] = @Original_CustomerID) AND ([CustName] = @Original_CustName) AND ((@IsNull_CustPhone = 1 AND [CustPhone] IS NULL) OR ([CustPhone] = @Original_CustPhone)) AND ((@IsNull_CustEmail = 1 AND [CustEmail] IS NULL) OR ([CustEmail] = @Original_CustEmail)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CustPhone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustPhone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustPhone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CustEmail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustEmail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Customer] ([CustomerID], [CustName], [CustPhone], [CustEmail]) VALUES (@CustomerID, @CustName, @CustPhone, @CustEmail);
SELECT CustomerID, CustName, CustPhone, CustEmail FROM Customer WHERE (CustomerID = @CustomerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustPhone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CustomerID, CustName, CustPhone, CustEmail FROM dbo.Customer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Customer] SET [CustomerID] = @CustomerID, [CustName] = @CustName, [CustPhone] = @CustPhone, [CustEmail] = @CustEmail WHERE (([CustomerID] = @Original_CustomerID) AND ([CustName] = @Original_CustName) AND ((@IsNull_CustPhone = 1 AND [CustPhone] IS NULL) OR ([CustPhone] = @Original_CustPhone)) AND ((@IsNull_CustEmail = 1 AND [CustEmail] IS NULL) OR ([CustEmail] = @Original_CustEmail)));
SELECT CustomerID, CustName, CustPhone, CustEmail FROM Customer WHERE (CustomerID = @CustomerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustPhone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CustPhone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustPhone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustPhone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CustEmail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustEmail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CustomerID" DataSetColumn="CustomerID" />
              <Mapping SourceColumn="CustName" DataSetColumn="CustName" />
              <Mapping SourceColumn="CustPhone" DataSetColumn="CustPhone" />
              <Mapping SourceColumn="CustEmail" DataSetColumn="CustEmail" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CustomerID, CustName, CustPhone, CustEmail
FROM     Customer
WHERE  (CustName = @CustName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CustName" ColumnName="CustName" DataSourceName="Apinihan.dbo.Customer" DataTypeServer="nvarchar(30)" DbType="String" Direction="Input" ParameterName="@CustName" Precision="0" ProviderType="NVarChar" Scale="0" Size="30" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Search_CustName" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="Search_CustName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="Search_CustName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CustomerID, CustName, CustPhone, CustEmail
FROM     Customer
WHERE  (CustName LIKE @CustName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CustName" ColumnName="CustName" DataSourceName="Apinihan.dbo.Customer" DataTypeServer="nvarchar(30)" DbType="String" Direction="Input" ParameterName="@CustName" Precision="0" ProviderType="NVarChar" Scale="0" Size="30" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipmentTableAdapter" GeneratorDataComponentClassName="EquipmentTableAdapter" Name="Equipment" UserDataComponentName="EquipmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Equipment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Equipment] WHERE (([EquipmentID] = @Original_EquipmentID) AND ([EquipmentName] = @Original_EquipmentName) AND ((@IsNull_EquipmentDetail = 1 AND [EquipmentDetail] IS NULL) OR ([EquipmentDetail] = @Original_EquipmentDetail)) AND ((@IsNull_EquipmentCost = 1 AND [EquipmentCost] IS NULL) OR ([EquipmentCost] = @Original_EquipmentCost)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EquipmentDetail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EquipmentDetail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentDetail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentDetail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EquipmentCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EquipmentCost" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_EquipmentCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EquipmentCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Equipment] ([EquipmentID], [EquipmentName], [EquipmentDetail], [EquipmentCost]) VALUES (@EquipmentID, @EquipmentName, @EquipmentDetail, @EquipmentCost);
SELECT EquipmentID, EquipmentName, EquipmentDetail, EquipmentCost FROM Equipment WHERE (EquipmentID = @EquipmentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentDetail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentDetail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@EquipmentCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EquipmentCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EquipmentID, EquipmentName, EquipmentDetail, EquipmentCost FROM dbo.Equipment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Equipment] SET [EquipmentID] = @EquipmentID, [EquipmentName] = @EquipmentName, [EquipmentDetail] = @EquipmentDetail, [EquipmentCost] = @EquipmentCost WHERE (([EquipmentID] = @Original_EquipmentID) AND ([EquipmentName] = @Original_EquipmentName) AND ((@IsNull_EquipmentDetail = 1 AND [EquipmentDetail] IS NULL) OR ([EquipmentDetail] = @Original_EquipmentDetail)) AND ((@IsNull_EquipmentCost = 1 AND [EquipmentCost] IS NULL) OR ([EquipmentCost] = @Original_EquipmentCost)));
SELECT EquipmentID, EquipmentName, EquipmentDetail, EquipmentCost FROM Equipment WHERE (EquipmentID = @EquipmentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentDetail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentDetail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@EquipmentCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EquipmentCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EquipmentDetail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EquipmentDetail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentDetail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentDetail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EquipmentCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EquipmentCost" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_EquipmentCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EquipmentCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EquipmentID" DataSetColumn="EquipmentID" />
              <Mapping SourceColumn="EquipmentName" DataSetColumn="EquipmentName" />
              <Mapping SourceColumn="EquipmentDetail" DataSetColumn="EquipmentDetail" />
              <Mapping SourceColumn="EquipmentCost" DataSetColumn="EquipmentCost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EventTableAdapter" GeneratorDataComponentClassName="EventTableAdapter" Name="Event" UserDataComponentName="EventTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Event" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Event] WHERE (([EventID] = @Original_EventID) AND ((@IsNull_ManagerID = 1 AND [ManagerID] IS NULL) OR ([ManagerID] = @Original_ManagerID)) AND ((@IsNull_CustomerID = 1 AND [CustomerID] IS NULL) OR ([CustomerID] = @Original_CustomerID)) AND ([EventName] = @Original_EventName) AND ([EventStartDate] = @Original_EventStartDate) AND ([EventEndDate] = @Original_EventEndDate) AND ([EventPrice] = @Original_EventPrice) AND ([EventStreet] = @Original_EventStreet) AND ([EventCity] = @Original_EventCity) AND ([EventState] = @Original_EventState) AND ([EventZip] = @Original_EventZip))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CustomerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_EventStartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventStartDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_EventEndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventEndDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_EventPrice" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EventPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventStreet" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventStreet" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventCity" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventState" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventState" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventZip" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventZip" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Event] ([EventID], [ManagerID], [CustomerID], [EventName], [EventStartDate], [EventEndDate], [EventPrice], [EventStreet], [EventCity], [EventState], [EventZip]) VALUES (@EventID, @ManagerID, @CustomerID, @EventName, @EventStartDate, @EventEndDate, @EventPrice, @EventStreet, @EventCity, @EventState, @EventZip);
SELECT EventID, ManagerID, CustomerID, EventName, EventStartDate, EventEndDate, EventPrice, EventStreet, EventCity, EventState, EventZip FROM Event WHERE (EventID = @EventID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EventStartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventStartDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EventEndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventEndDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@EventPrice" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EventPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventStreet" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventStreet" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventCity" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventState" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventState" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventZip" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EventID, ManagerID, CustomerID, EventName, EventStartDate, EventEndDate, EventPrice, EventStreet, EventCity, EventState, EventZip FROM dbo.Event</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Event] SET [EventID] = @EventID, [ManagerID] = @ManagerID, [CustomerID] = @CustomerID, [EventName] = @EventName, [EventStartDate] = @EventStartDate, [EventEndDate] = @EventEndDate, [EventPrice] = @EventPrice, [EventStreet] = @EventStreet, [EventCity] = @EventCity, [EventState] = @EventState, [EventZip] = @EventZip WHERE (([EventID] = @Original_EventID) AND ((@IsNull_ManagerID = 1 AND [ManagerID] IS NULL) OR ([ManagerID] = @Original_ManagerID)) AND ((@IsNull_CustomerID = 1 AND [CustomerID] IS NULL) OR ([CustomerID] = @Original_CustomerID)) AND ([EventName] = @Original_EventName) AND ([EventStartDate] = @Original_EventStartDate) AND ([EventEndDate] = @Original_EventEndDate) AND ([EventPrice] = @Original_EventPrice) AND ([EventStreet] = @Original_EventStreet) AND ([EventCity] = @Original_EventCity) AND ([EventState] = @Original_EventState) AND ([EventZip] = @Original_EventZip));
SELECT EventID, ManagerID, CustomerID, EventName, EventStartDate, EventEndDate, EventPrice, EventStreet, EventCity, EventState, EventZip FROM Event WHERE (EventID = @EventID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EventStartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventStartDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EventEndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventEndDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@EventPrice" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EventPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventStreet" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventStreet" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventCity" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventState" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventState" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventZip" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CustomerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CustomerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CustomerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_EventStartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventStartDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_EventEndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EventEndDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_EventPrice" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="EventPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventStreet" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventStreet" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventCity" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventState" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventState" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventZip" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventZip" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EventID" DataSetColumn="EventID" />
              <Mapping SourceColumn="ManagerID" DataSetColumn="ManagerID" />
              <Mapping SourceColumn="CustomerID" DataSetColumn="CustomerID" />
              <Mapping SourceColumn="EventName" DataSetColumn="EventName" />
              <Mapping SourceColumn="EventStartDate" DataSetColumn="EventStartDate" />
              <Mapping SourceColumn="EventEndDate" DataSetColumn="EventEndDate" />
              <Mapping SourceColumn="EventPrice" DataSetColumn="EventPrice" />
              <Mapping SourceColumn="EventStreet" DataSetColumn="EventStreet" />
              <Mapping SourceColumn="EventCity" DataSetColumn="EventCity" />
              <Mapping SourceColumn="EventState" DataSetColumn="EventState" />
              <Mapping SourceColumn="EventZip" DataSetColumn="EventZip" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstallTableAdapter" GeneratorDataComponentClassName="InstallTableAdapter" Name="Install" UserDataComponentName="InstallTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Install" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Install] WHERE (([EventID] = @Original_EventID) AND ([EquipmentID] = @Original_EquipmentID) AND ([InstallDateFrom] = @Original_InstallDateFrom) AND ([InstallDateTo] = @Original_InstallDateTo))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_InstallDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateFrom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_InstallDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateTo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Install] ([EventID], [EquipmentID], [InstallDateFrom], [InstallDateTo]) VALUES (@EventID, @EquipmentID, @InstallDateFrom, @InstallDateTo);
SELECT EventID, EquipmentID, InstallDateFrom, InstallDateTo FROM Install WHERE (EquipmentID = @EquipmentID) AND (EventID = @EventID) AND (InstallDateFrom = @InstallDateFrom) AND (InstallDateTo = @InstallDateTo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@InstallDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@InstallDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EventID, EquipmentID, InstallDateFrom, InstallDateTo FROM dbo.Install</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Install] SET [EventID] = @EventID, [EquipmentID] = @EquipmentID, [InstallDateFrom] = @InstallDateFrom, [InstallDateTo] = @InstallDateTo WHERE (([EventID] = @Original_EventID) AND ([EquipmentID] = @Original_EquipmentID) AND ([InstallDateFrom] = @Original_InstallDateFrom) AND ([InstallDateTo] = @Original_InstallDateTo));
SELECT EventID, EquipmentID, InstallDateFrom, InstallDateTo FROM Install WHERE (EquipmentID = @EquipmentID) AND (EventID = @EventID) AND (InstallDateFrom = @InstallDateFrom) AND (InstallDateTo = @InstallDateTo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@InstallDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@InstallDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EquipmentID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EquipmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_InstallDateFrom" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateFrom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_InstallDateTo" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="InstallDateTo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EventID" DataSetColumn="EventID" />
              <Mapping SourceColumn="EquipmentID" DataSetColumn="EquipmentID" />
              <Mapping SourceColumn="InstallDateFrom" DataSetColumn="InstallDateFrom" />
              <Mapping SourceColumn="InstallDateTo" DataSetColumn="InstallDateTo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ManagerTableAdapter" GeneratorDataComponentClassName="ManagerTableAdapter" Name="Manager" UserDataComponentName="ManagerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Manager" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Manager] WHERE (([ManagerID] = @Original_ManagerID) AND ([ManagerFirstName] = @Original_ManagerFirstName) AND ([ManagerLastName] = @Original_ManagerLastName) AND ([ManagerEmail] = @Original_ManagerEmail) AND ([ManagerPhone] = @Original_ManagerPhone))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerPhone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Manager] ([ManagerID], [ManagerFirstName], [ManagerLastName], [ManagerEmail], [ManagerPhone]) VALUES (@ManagerID, @ManagerFirstName, @ManagerLastName, @ManagerEmail, @ManagerPhone);
SELECT ManagerID, ManagerFirstName, ManagerLastName, ManagerEmail, ManagerPhone, ManagerFirstName + N' ' + ManagerLastName AS ManagerFullName FROM Manager WHERE (ManagerID = @ManagerID) ORDER BY ManagerLastName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerPhone" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ManagerID, ManagerFirstName, ManagerLastName, ManagerEmail, ManagerPhone, ManagerFirstName + N' ' + ManagerLastName AS ManagerFullName
FROM     Manager
ORDER BY ManagerLastName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Manager] SET [ManagerID] = @ManagerID, [ManagerFirstName] = @ManagerFirstName, [ManagerLastName] = @ManagerLastName, [ManagerEmail] = @ManagerEmail, [ManagerPhone] = @ManagerPhone WHERE (([ManagerID] = @Original_ManagerID) AND ([ManagerFirstName] = @Original_ManagerFirstName) AND ([ManagerLastName] = @Original_ManagerLastName) AND ([ManagerEmail] = @Original_ManagerEmail) AND ([ManagerPhone] = @Original_ManagerPhone));
SELECT ManagerID, ManagerFirstName, ManagerLastName, ManagerEmail, ManagerPhone, ManagerFirstName + N' ' + ManagerLastName AS ManagerFullName FROM Manager WHERE (ManagerID = @ManagerID) ORDER BY ManagerLastName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ManagerPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerPhone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ManagerPhone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ManagerPhone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ManagerID" DataSetColumn="ManagerID" />
              <Mapping SourceColumn="ManagerFirstName" DataSetColumn="ManagerFirstName" />
              <Mapping SourceColumn="ManagerLastName" DataSetColumn="ManagerLastName" />
              <Mapping SourceColumn="ManagerEmail" DataSetColumn="ManagerEmail" />
              <Mapping SourceColumn="ManagerPhone" DataSetColumn="ManagerPhone" />
              <Mapping SourceColumn="ManagerFullName" DataSetColumn="ManagerFullName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PerformerTableAdapter" GeneratorDataComponentClassName="PerformerTableAdapter" Name="Performer" UserDataComponentName="PerformerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Performer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Performer] WHERE (([PerformerID] = @Original_PerformerID) AND ([PerformerName] = @Original_PerformerName) AND ((@IsNull_PerformerRating = 1 AND [PerformerRating] IS NULL) OR ([PerformerRating] = @Original_PerformerRating)) AND ([PerformerCost] = @Original_PerformerCost) AND ((@IsNull_PerformerEmail = 1 AND [PerformerEmail] IS NULL) OR ([PerformerEmail] = @Original_PerformerEmail)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerRating" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerRating" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_PerformerCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="PerformerCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PerformerEmail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerEmail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Performer] ([PerformerID], [PerformerName], [PerformerRating], [PerformerCost], [PerformerEmail]) VALUES (@PerformerID, @PerformerName, @PerformerRating, @PerformerCost, @PerformerEmail);
SELECT PerformerID, PerformerName, PerformerRating, PerformerCost, PerformerEmail FROM Performer WHERE (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerRating" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@PerformerCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="PerformerCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PerformerID, PerformerName, PerformerRating, PerformerCost, PerformerEmail FROM dbo.Performer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Performer] SET [PerformerID] = @PerformerID, [PerformerName] = @PerformerName, [PerformerRating] = @PerformerRating, [PerformerCost] = @PerformerCost, [PerformerEmail] = @PerformerEmail WHERE (([PerformerID] = @Original_PerformerID) AND ([PerformerName] = @Original_PerformerName) AND ((@IsNull_PerformerRating = 1 AND [PerformerRating] IS NULL) OR ([PerformerRating] = @Original_PerformerRating)) AND ([PerformerCost] = @Original_PerformerCost) AND ((@IsNull_PerformerEmail = 1 AND [PerformerEmail] IS NULL) OR ([PerformerEmail] = @Original_PerformerEmail)));
SELECT PerformerID, PerformerName, PerformerRating, PerformerCost, PerformerEmail FROM Performer WHERE (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerRating" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@PerformerCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="PerformerCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PerformerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerRating" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerRating" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_PerformerCost" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="PerformerCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PerformerEmail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PerformerEmail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PerformerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PerformerEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PerformerID" DataSetColumn="PerformerID" />
              <Mapping SourceColumn="PerformerName" DataSetColumn="PerformerName" />
              <Mapping SourceColumn="PerformerRating" DataSetColumn="PerformerRating" />
              <Mapping SourceColumn="PerformerCost" DataSetColumn="PerformerCost" />
              <Mapping SourceColumn="PerformerEmail" DataSetColumn="PerformerEmail" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Performer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT PerformerID, PerformerName, PerformerRating, PerformerCost, PerformerEmail
FROM     Performer
WHERE  (PerformerID = @PerformerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PerformerID" ColumnName="PerformerID" DataSourceName="Apinihan.dbo.Performer" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@PerformerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="PerformerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Performer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT PerformerID, PerformerName, PerformerRating, PerformerCost, PerformerEmail
FROM     Performer
WHERE  (PerformerCost BETWEEN @PerformerMinCost AND @PerformerMaxCost) AND (PerformerRating = @PerformerRating)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PerformerMinCost" ColumnName="PerformerCost" DataSourceName="Apinihan.dbo.Performer" DataTypeServer="money" DbType="Currency" Direction="Input" ParameterName="@PerformerMinCost" Precision="0" ProviderType="Money" Scale="0" Size="8" SourceColumn="PerformerCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PerformerMaxCost" ColumnName="PerformerCost" DataSourceName="Apinihan.dbo.Performer" DataTypeServer="money" DbType="Currency" Direction="Input" ParameterName="@PerformerMaxCost" Precision="0" ProviderType="Money" Scale="0" Size="8" SourceColumn="PerformerCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="PerformerRating" ColumnName="PerformerRating" DataSourceName="Apinihan.dbo.Performer" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PerformerRating" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PerformerRating" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkerTableAdapter" GeneratorDataComponentClassName="WorkerTableAdapter" Name="Worker" UserDataComponentName="WorkerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Worker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Worker] WHERE (([WorkerID] = @Original_WorkerID) AND ([WorkerFirstName] = @Original_WorkerFirstName) AND ([WorkerLastName] = @Original_WorkerLastName) AND ([WorkerSalary] = @Original_WorkerSalary) AND ([WorkerEmail] = @Original_WorkerEmail))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_WorkerSalary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="WorkerSalary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Worker] ([WorkerID], [WorkerFirstName], [WorkerLastName], [WorkerSalary], [WorkerEmail], [WorkerPhoto]) VALUES (@WorkerID, @WorkerFirstName, @WorkerLastName, @WorkerSalary, @WorkerEmail, @WorkerPhoto);
SELECT WorkerID, WorkerFirstName, WorkerLastName, WorkerSalary, WorkerEmail, WorkerFirstName + N' ' + WorkerLastName AS WorkerFullName, WorkerPhoto FROM Worker WHERE (WorkerID = @WorkerID) ORDER BY WorkerLastName, WorkerFirstName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@WorkerSalary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="WorkerSalary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@WorkerPhoto" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="WorkerPhoto" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT WorkerID, WorkerFirstName, WorkerLastName, WorkerSalary, WorkerEmail, WorkerFirstName + N' ' + WorkerLastName AS WorkerFullName, WorkerPhoto
FROM     Worker
ORDER BY WorkerLastName, WorkerFirstName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Worker] SET [WorkerID] = @WorkerID, [WorkerFirstName] = @WorkerFirstName, [WorkerLastName] = @WorkerLastName, [WorkerSalary] = @WorkerSalary, [WorkerEmail] = @WorkerEmail, [WorkerPhoto] = @WorkerPhoto WHERE (([WorkerID] = @Original_WorkerID) AND ([WorkerFirstName] = @Original_WorkerFirstName) AND ([WorkerLastName] = @Original_WorkerLastName) AND ([WorkerSalary] = @Original_WorkerSalary) AND ([WorkerEmail] = @Original_WorkerEmail));
SELECT WorkerID, WorkerFirstName, WorkerLastName, WorkerSalary, WorkerEmail, WorkerFirstName + N' ' + WorkerLastName AS WorkerFullName, WorkerPhoto FROM Worker WHERE (WorkerID = @WorkerID) ORDER BY WorkerLastName, WorkerFirstName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@WorkerSalary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="WorkerSalary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WorkerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@WorkerPhoto" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="WorkerPhoto" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_WorkerSalary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="WorkerSalary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WorkerEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WorkerEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WorkerID" DataSetColumn="WorkerID" />
              <Mapping SourceColumn="WorkerFirstName" DataSetColumn="WorkerFirstName" />
              <Mapping SourceColumn="WorkerLastName" DataSetColumn="WorkerLastName" />
              <Mapping SourceColumn="WorkerSalary" DataSetColumn="WorkerSalary" />
              <Mapping SourceColumn="WorkerEmail" DataSetColumn="WorkerEmail" />
              <Mapping SourceColumn="WorkerFullName" DataSetColumn="WorkerFullName" />
              <Mapping SourceColumn="WorkerPhoto" DataSetColumn="WorkerPhoto" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Worker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT WorkerEmail, WorkerFirstName, WorkerID, WorkerLastName, WorkerPhoto, WorkerSalary FROM Worker WHERE (WorkerID LIKE @WorkerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="WorkerID" ColumnName="WorkerID" DataSourceName="Apinihan.dbo.Worker" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Worker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WorkerID, WorkerFirstName, WorkerLastName, WorkerSalary, WorkerEmail, WorkerFirstName + N' ' + WorkerLastName AS WorkerFullName, WorkerPhoto
FROM     Worker
ORDER BY WorkerLastName, WorkerFirstName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vw_EventVarCostTableAdapter" GeneratorDataComponentClassName="vw_EventVarCostTableAdapter" Name="vw_EventVarCost" UserDataComponentName="vw_EventVarCostTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.vw_EventVarCost" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT [Manager Name], EventName, EventStartDate, EventEndDate, [Number of Days], [Number of Workers], [Worker Cost], [Number of Performers], [Performer Cost]
FROM     vw_EventVarCost</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Manager Name" DataSetColumn="Manager Name" />
              <Mapping SourceColumn="EventName" DataSetColumn="EventName" />
              <Mapping SourceColumn="EventStartDate" DataSetColumn="EventStartDate" />
              <Mapping SourceColumn="EventEndDate" DataSetColumn="EventEndDate" />
              <Mapping SourceColumn="Number of Days" DataSetColumn="Number of Days" />
              <Mapping SourceColumn="Number of Workers" DataSetColumn="Number of Workers" />
              <Mapping SourceColumn="Worker Cost" DataSetColumn="Worker Cost" />
              <Mapping SourceColumn="Number of Performers" DataSetColumn="Number of Performers" />
              <Mapping SourceColumn="Performer Cost" DataSetColumn="Performer Cost" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.vw_EventVarCost" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT [Manager Name], EventName, EventStartDate, EventEndDate, [Number of Days], [Number of Workers], [Worker Cost], [Number of Performers], [Performer Cost]
FROM     vw_EventVarCost
WHERE  ([Number of Performers] BETWEEN @MinPerformer AND @MaxPerformer) AND (EventStartDate BETWEEN @DateFrom AND @DateTo) OR
                  ([Number of Performers] BETWEEN @MinPerformer AND @MaxPerformer) AND (EventEndDate BETWEEN @DateFrom AND @DateTo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="MinPerformer" ColumnName="Number of Performers" DataSourceName="Apinihan.dbo.vw_EventVarCost" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MinPerformer" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Number of Performers" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MaxPerformer" ColumnName="Number of Performers" DataSourceName="Apinihan.dbo.vw_EventVarCost" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MaxPerformer" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Number of Performers" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DateFrom" ColumnName="EventStartDate" DataSourceName="Apinihan.dbo.vw_EventVarCost" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@DateFrom" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="EventStartDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DateTo" ColumnName="EventStartDate" DataSourceName="Apinihan.dbo.vw_EventVarCost" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@DateTo" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="EventStartDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkerViewTableAdapter" GeneratorDataComponentClassName="WorkerViewTableAdapter" Name="WorkerView" UserDataComponentName="WorkerViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.WorkerView" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WorkerID, WorkerFirstName, WorkerLastName, WorkerEmail FROM dbo.WorkerView</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WorkerID" DataSetColumn="WorkerID" />
              <Mapping SourceColumn="WorkerFirstName" DataSetColumn="WorkerFirstName" />
              <Mapping SourceColumn="WorkerLastName" DataSetColumn="WorkerLastName" />
              <Mapping SourceColumn="WorkerEmail" DataSetColumn="WorkerEmail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MonthlyIncomeStatementTableAdapter" GeneratorDataComponentClassName="MonthlyIncomeStatementTableAdapter" Name="MonthlyIncomeStatement" UserDataComponentName="MonthlyIncomeStatementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.MonthlyIncomeStatement" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.MonthlyIncomeStatement</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@Month" Precision="0" ProviderType="VarChar" Scale="0" Size="20" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Revenue" DataSetColumn="Revenue" />
              <Mapping SourceColumn="Expenses" DataSetColumn="Expenses" />
              <Mapping SourceColumn="Net" DataSetColumn="Net" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SalaryPayableTableAdapter" GeneratorDataComponentClassName="SalaryPayableTableAdapter" Name="SalaryPayable" UserDataComponentName="SalaryPayableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.SalaryPayable" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.SalaryPayable</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@InputMonth" Precision="0" ProviderType="VarChar" Scale="0" Size="5" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Worker Name" DataSetColumn="Worker Name" />
              <Mapping SourceColumn="EventName" DataSetColumn="EventName" />
              <Mapping SourceColumn="AssignmentDateFrom" DataSetColumn="AssignmentDateFrom" />
              <Mapping SourceColumn="AssignmentDateTo" DataSetColumn="AssignmentDateTo" />
              <Mapping SourceColumn="SalaryPayable" DataSetColumn="SalaryPayable" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsernamepassTableAdapter" GeneratorDataComponentClassName="UsernamepassTableAdapter" Name="Usernamepass" UserDataComponentName="UsernamepassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Usernamepass" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Usernamepass] WHERE (([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([Position] = @Original_Position))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Usernamepass] ([Username], [Password], [Position]) VALUES (@Username, @Password, @Position);
SELECT Username, Password, Position FROM Usernamepass WHERE (Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Usernamepass.*
FROM     Usernamepass</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Usernamepass] SET [Username] = @Username, [Password] = @Password, [Position] = @Position WHERE (([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([Position] = @Original_Position));
SELECT Username, Password, Position FROM Usernamepass WHERE (Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Position" DataSetColumn="Position" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Usernamepass" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Username, Password, Position
FROM     Usernamepass
WHERE  (Username = @Username) AND (Password = @Password)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Username" ColumnName="Username" DataSourceName="Apinihan.dbo.Usernamepass" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Password" ColumnName="Password" DataSourceName="Apinihan.dbo.Usernamepass" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Assignment1TableAdapter" GeneratorDataComponentClassName="Assignment1TableAdapter" Name="Assignment1" UserDataComponentName="Assignment1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Assignment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT 
                  Worker.WorkerFirstName + ' ' + Worker.WorkerLastName AS WorkerName, Assignment.AssignmentDateFrom, Assignment.AssignmentDateTo, 
                  Manager.ManagerFirstName + ' ' + Manager.ManagerLastName AS ManagerName, DATEDIFF(d, Assignment.AssignmentDateFrom, Assignment.AssignmentDateTo) + 1 * Worker.WorkerSalary AS SalaryPayable
FROM     Manager INNER JOIN
                  Worker INNER JOIN
                  Assignment ON Worker.WorkerID = Assignment.WorkerID ON Manager.ManagerID = Assignment.ManagerID INNER JOIN
                  Event ON Manager.ManagerID = Event.ManagerID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WorkerName" DataSetColumn="WorkerName" />
              <Mapping SourceColumn="AssignmentDateFrom" DataSetColumn="AssignmentDateFrom" />
              <Mapping SourceColumn="AssignmentDateTo" DataSetColumn="AssignmentDateTo" />
              <Mapping SourceColumn="ManagerName" DataSetColumn="ManagerName" />
              <Mapping SourceColumn="SalaryPayable" DataSetColumn="SalaryPayable" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Performer1TableAdapter" GeneratorDataComponentClassName="Performer1TableAdapter" Name="Performer1" UserDataComponentName="Performer1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Performer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Performer.PerformerID, Performer.PerformerName, Performer.PerformerRating, Performer.PerformerEmail, Performer.PerformerCost
FROM     Performer LEFT OUTER JOIN
                  Book ON Performer.PerformerID = Book.PerformerID
WHERE  (Book.PerformerID IS NULL);</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PerformerID" DataSetColumn="PerformerID" />
              <Mapping SourceColumn="PerformerName" DataSetColumn="PerformerName" />
              <Mapping SourceColumn="PerformerRating" DataSetColumn="PerformerRating" />
              <Mapping SourceColumn="PerformerEmail" DataSetColumn="PerformerEmail" />
              <Mapping SourceColumn="PerformerCost" DataSetColumn="PerformerCost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Event1TableAdapter" GeneratorDataComponentClassName="Event1TableAdapter" Name="Event1" UserDataComponentName="Event1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Event" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Event.EventID, Event.EventName, Manager.ManagerFirstName + ' ' + Manager.ManagerLastName AS Manager, Event.EventStartDate, Event.EventEndDate, SUM(Event.EventPrice) AS SumOfEventPrice
FROM     Manager INNER JOIN
                  Event ON Manager.ManagerID = Event.ManagerID
GROUP BY Event.EventID, Event.EventName, Manager.ManagerFirstName + ' ' + Manager.ManagerLastName, Manager.ManagerFirstName, Manager.ManagerLastName, Event.EventStartDate, Event.EventEndDate</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EventID" DataSetColumn="EventID" />
              <Mapping SourceColumn="EventName" DataSetColumn="EventName" />
              <Mapping SourceColumn="Manager" DataSetColumn="Manager" />
              <Mapping SourceColumn="EventStartDate" DataSetColumn="EventStartDate" />
              <Mapping SourceColumn="EventEndDate" DataSetColumn="EventEndDate" />
              <Mapping SourceColumn="SumOfEventPrice" DataSetColumn="SumOfEventPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Customer1TableAdapter" GeneratorDataComponentClassName="Customer1TableAdapter" Name="Customer1" UserDataComponentName="Customer1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Customer.CustName, Customer.CustPhone, SUM(Event.EventPrice) AS AmountSpent, Customer.CustEmail
FROM     Customer INNER JOIN
                  Event ON Customer.CustomerID = Event.CustomerID
GROUP BY Customer.CustName, Customer.CustPhone, Customer.CustEmail
HAVING (SUM(Event.EventPrice) &gt;= 100000)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CustName" DataSetColumn="CustName" />
              <Mapping SourceColumn="CustPhone" DataSetColumn="CustPhone" />
              <Mapping SourceColumn="AmountSpent" DataSetColumn="AmountSpent" />
              <Mapping SourceColumn="CustEmail" DataSetColumn="CustEmail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Event2TableAdapter" GeneratorDataComponentClassName="Event2TableAdapter" Name="Event2" UserDataComponentName="Event2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.Event" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SUM(EventPrice) AS TownSum, EventCity, COUNT(EventID) AS EventsPerCity, Round((Sum(EventPrice))/Count(EventID),0) AS AvgSpendingPerEvent
FROM     Event
WHERE  (EventCity = 'Denver') OR
                  (EventCity = 'Parker') OR
                  (EventCity = 'Broomfield') OR
                  (EventCity = 'Englewood') OR
                  (EventCity = 'Boulder') OR
                  (EventCity = 'Fort Collins')
GROUP BY EventCity
ORDER BY AvgSpendingPerEvent DESC;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TownSum" DataSetColumn="TownSum" />
              <Mapping SourceColumn="EventCity" DataSetColumn="EventCity" />
              <Mapping SourceColumn="EventsPerCity" DataSetColumn="EventsPerCity" />
              <Mapping SourceColumn="AvgSpendingPerEvent" DataSetColumn="AvgSpendingPerEvent" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.fn_NumPerfInEvent" DbObjectType="Function" GenerateShortCommands="true" GeneratorSourceName="fn_NumPerfInEvent" MethodsParameterType="CLR" Modifier="Public" Name="fn_NumPerfInEvent" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="fn_NumPerfInEvent">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.fn_NumPerfInEvent</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@InputEventName" Precision="0" ProviderType="VarChar" Scale="0" Size="30" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="ApinihanConnectionString (MySettings)" DbObjectName="Apinihan.dbo.fn_NumWorkerInEvent" DbObjectType="Function" GenerateShortCommands="true" GeneratorSourceName="fn_NumWorkerInEvent" MethodsParameterType="CLR" Modifier="Public" Name="fn_NumWorkerInEvent" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="fn_NumWorkerInEvent">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.fn_NumWorkerInEvent</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@InputEventName" Precision="0" ProviderType="VarChar" Scale="0" Size="30" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ApinihanDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ApinihanDataSet" msprop:Generator_UserDSName="ApinihanDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Assignment" msprop:Generator_TableClassName="AssignmentDataTable" msprop:Generator_TableVarName="tableAssignment" msprop:Generator_TablePropName="Assignment" msprop:Generator_RowDeletingName="AssignmentRowDeleting" msprop:Generator_RowChangingName="AssignmentRowChanging" msprop:Generator_RowEvHandlerName="AssignmentRowChangeEventHandler" msprop:Generator_RowDeletedName="AssignmentRowDeleted" msprop:Generator_UserTableName="Assignment" msprop:Generator_RowChangedName="AssignmentRowChanged" msprop:Generator_RowEvArgName="AssignmentRowChangeEvent" msprop:Generator_RowClassName="AssignmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ManagerID" msprop:Generator_ColumnVarNameInTable="columnManagerID" msprop:Generator_ColumnPropNameInRow="ManagerID" msprop:Generator_ColumnPropNameInTable="ManagerIDColumn" msprop:Generator_UserColumnName="ManagerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerID" msprop:Generator_ColumnVarNameInTable="columnWorkerID" msprop:Generator_ColumnPropNameInRow="WorkerID" msprop:Generator_ColumnPropNameInTable="WorkerIDColumn" msprop:Generator_UserColumnName="WorkerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AssignmentDateFrom" msprop:Generator_ColumnVarNameInTable="columnAssignmentDateFrom" msprop:Generator_ColumnPropNameInRow="AssignmentDateFrom" msprop:Generator_ColumnPropNameInTable="AssignmentDateFromColumn" msprop:Generator_UserColumnName="AssignmentDateFrom" type="xs:dateTime" />
              <xs:element name="AssignmentDateTo" msprop:Generator_ColumnVarNameInTable="columnAssignmentDateTo" msprop:Generator_ColumnPropNameInRow="AssignmentDateTo" msprop:Generator_ColumnPropNameInTable="AssignmentDateToColumn" msprop:Generator_UserColumnName="AssignmentDateTo" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Book" msprop:Generator_TableClassName="BookDataTable" msprop:Generator_TableVarName="tableBook" msprop:Generator_TablePropName="Book" msprop:Generator_RowDeletingName="BookRowDeleting" msprop:Generator_RowChangingName="BookRowChanging" msprop:Generator_RowEvHandlerName="BookRowChangeEventHandler" msprop:Generator_RowDeletedName="BookRowDeleted" msprop:Generator_UserTableName="Book" msprop:Generator_RowChangedName="BookRowChanged" msprop:Generator_RowEvArgName="BookRowChangeEvent" msprop:Generator_RowClassName="BookRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EventID" msprop:Generator_ColumnVarNameInTable="columnEventID" msprop:Generator_ColumnPropNameInRow="EventID" msprop:Generator_ColumnPropNameInTable="EventIDColumn" msprop:Generator_UserColumnName="EventID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PerformerID" msprop:Generator_ColumnVarNameInTable="columnPerformerID" msprop:Generator_ColumnPropNameInRow="PerformerID" msprop:Generator_ColumnPropNameInTable="PerformerIDColumn" msprop:Generator_UserColumnName="PerformerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BookDateFrom" msprop:Generator_ColumnVarNameInTable="columnBookDateFrom" msprop:Generator_ColumnPropNameInRow="BookDateFrom" msprop:Generator_ColumnPropNameInTable="BookDateFromColumn" msprop:Generator_UserColumnName="BookDateFrom" type="xs:dateTime" />
              <xs:element name="BookDateTo" msprop:Generator_ColumnVarNameInTable="columnBookDateTo" msprop:Generator_ColumnPropNameInRow="BookDateTo" msprop:Generator_ColumnPropNameInTable="BookDateToColumn" msprop:Generator_UserColumnName="BookDateTo" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Customer" msprop:Generator_TableClassName="CustomerDataTable" msprop:Generator_TableVarName="tableCustomer" msprop:Generator_TablePropName="Customer" msprop:Generator_RowDeletingName="CustomerRowDeleting" msprop:Generator_RowChangingName="CustomerRowChanging" msprop:Generator_RowEvHandlerName="CustomerRowChangeEventHandler" msprop:Generator_RowDeletedName="CustomerRowDeleted" msprop:Generator_UserTableName="Customer" msprop:Generator_RowChangedName="CustomerRowChanged" msprop:Generator_RowEvArgName="CustomerRowChangeEvent" msprop:Generator_RowClassName="CustomerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CustomerID" msprop:Generator_ColumnVarNameInTable="columnCustomerID" msprop:Generator_ColumnPropNameInRow="CustomerID" msprop:Generator_ColumnPropNameInTable="CustomerIDColumn" msprop:Generator_UserColumnName="CustomerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CustName" msprop:Generator_ColumnVarNameInTable="columnCustName" msprop:Generator_ColumnPropNameInRow="CustName" msprop:Generator_ColumnPropNameInTable="CustNameColumn" msprop:Generator_UserColumnName="CustName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CustPhone" msprop:Generator_ColumnVarNameInTable="columnCustPhone" msprop:Generator_ColumnPropNameInRow="CustPhone" msprop:Generator_ColumnPropNameInTable="CustPhoneColumn" msprop:Generator_UserColumnName="CustPhone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="14" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CustEmail" msprop:Generator_ColumnVarNameInTable="columnCustEmail" msprop:Generator_ColumnPropNameInRow="CustEmail" msprop:Generator_ColumnPropNameInTable="CustEmailColumn" msprop:Generator_UserColumnName="CustEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Equipment" msprop:Generator_TableClassName="EquipmentDataTable" msprop:Generator_TableVarName="tableEquipment" msprop:Generator_TablePropName="Equipment" msprop:Generator_RowDeletingName="EquipmentRowDeleting" msprop:Generator_RowChangingName="EquipmentRowChanging" msprop:Generator_RowEvHandlerName="EquipmentRowChangeEventHandler" msprop:Generator_RowDeletedName="EquipmentRowDeleted" msprop:Generator_UserTableName="Equipment" msprop:Generator_RowChangedName="EquipmentRowChanged" msprop:Generator_RowEvArgName="EquipmentRowChangeEvent" msprop:Generator_RowClassName="EquipmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EquipmentID" msprop:Generator_ColumnVarNameInTable="columnEquipmentID" msprop:Generator_ColumnPropNameInRow="EquipmentID" msprop:Generator_ColumnPropNameInTable="EquipmentIDColumn" msprop:Generator_UserColumnName="EquipmentID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EquipmentName" msprop:Generator_ColumnVarNameInTable="columnEquipmentName" msprop:Generator_ColumnPropNameInRow="EquipmentName" msprop:Generator_ColumnPropNameInTable="EquipmentNameColumn" msprop:Generator_UserColumnName="EquipmentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EquipmentDetail" msprop:Generator_ColumnVarNameInTable="columnEquipmentDetail" msprop:Generator_ColumnPropNameInRow="EquipmentDetail" msprop:Generator_ColumnPropNameInTable="EquipmentDetailColumn" msprop:Generator_UserColumnName="EquipmentDetail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EquipmentCost" msprop:Generator_ColumnVarNameInTable="columnEquipmentCost" msprop:Generator_ColumnPropNameInRow="EquipmentCost" msprop:Generator_ColumnPropNameInTable="EquipmentCostColumn" msprop:Generator_UserColumnName="EquipmentCost" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Event" msprop:Generator_TableClassName="EventDataTable" msprop:Generator_TableVarName="tableEvent" msprop:Generator_TablePropName="_Event" msprop:Generator_RowDeletingName="EventRowDeleting" msprop:Generator_RowChangingName="EventRowChanging" msprop:Generator_RowEvHandlerName="EventRowChangeEventHandler" msprop:Generator_RowDeletedName="EventRowDeleted" msprop:Generator_UserTableName="Event" msprop:Generator_RowChangedName="EventRowChanged" msprop:Generator_RowEvArgName="EventRowChangeEvent" msprop:Generator_RowClassName="EventRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EventID" msprop:Generator_ColumnVarNameInTable="columnEventID" msprop:Generator_ColumnPropNameInRow="EventID" msprop:Generator_ColumnPropNameInTable="EventIDColumn" msprop:Generator_UserColumnName="EventID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerID" msprop:Generator_ColumnVarNameInTable="columnManagerID" msprop:Generator_ColumnPropNameInRow="ManagerID" msprop:Generator_ColumnPropNameInTable="ManagerIDColumn" msprop:Generator_UserColumnName="ManagerID" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CustomerID" msprop:Generator_ColumnVarNameInTable="columnCustomerID" msprop:Generator_ColumnPropNameInRow="CustomerID" msprop:Generator_ColumnPropNameInTable="CustomerIDColumn" msprop:Generator_UserColumnName="CustomerID" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventName" msprop:Generator_ColumnVarNameInTable="columnEventName" msprop:Generator_ColumnPropNameInRow="EventName" msprop:Generator_ColumnPropNameInTable="EventNameColumn" msprop:Generator_UserColumnName="EventName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventStartDate" msprop:Generator_ColumnVarNameInTable="columnEventStartDate" msprop:Generator_ColumnPropNameInRow="EventStartDate" msprop:Generator_ColumnPropNameInTable="EventStartDateColumn" msprop:Generator_UserColumnName="EventStartDate" type="xs:dateTime" />
              <xs:element name="EventEndDate" msprop:Generator_ColumnVarNameInTable="columnEventEndDate" msprop:Generator_ColumnPropNameInRow="EventEndDate" msprop:Generator_ColumnPropNameInTable="EventEndDateColumn" msprop:Generator_UserColumnName="EventEndDate" type="xs:dateTime" />
              <xs:element name="EventPrice" msprop:Generator_ColumnVarNameInTable="columnEventPrice" msprop:Generator_ColumnPropNameInRow="EventPrice" msprop:Generator_ColumnPropNameInTable="EventPriceColumn" msprop:Generator_UserColumnName="EventPrice" type="xs:decimal" />
              <xs:element name="EventStreet" msprop:Generator_ColumnVarNameInTable="columnEventStreet" msprop:Generator_ColumnPropNameInRow="EventStreet" msprop:Generator_ColumnPropNameInTable="EventStreetColumn" msprop:Generator_UserColumnName="EventStreet">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventCity" msprop:Generator_ColumnVarNameInTable="columnEventCity" msprop:Generator_ColumnPropNameInRow="EventCity" msprop:Generator_ColumnPropNameInTable="EventCityColumn" msprop:Generator_UserColumnName="EventCity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventState" msprop:Generator_ColumnVarNameInTable="columnEventState" msprop:Generator_ColumnPropNameInRow="EventState" msprop:Generator_ColumnPropNameInTable="EventStateColumn" msprop:Generator_UserColumnName="EventState">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventZip" msprop:Generator_ColumnVarNameInTable="columnEventZip" msprop:Generator_ColumnPropNameInRow="EventZip" msprop:Generator_ColumnPropNameInTable="EventZipColumn" msprop:Generator_UserColumnName="EventZip" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Install" msprop:Generator_TableClassName="InstallDataTable" msprop:Generator_TableVarName="tableInstall" msprop:Generator_TablePropName="Install" msprop:Generator_RowDeletingName="InstallRowDeleting" msprop:Generator_RowChangingName="InstallRowChanging" msprop:Generator_RowEvHandlerName="InstallRowChangeEventHandler" msprop:Generator_RowDeletedName="InstallRowDeleted" msprop:Generator_UserTableName="Install" msprop:Generator_RowChangedName="InstallRowChanged" msprop:Generator_RowEvArgName="InstallRowChangeEvent" msprop:Generator_RowClassName="InstallRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EventID" msprop:Generator_ColumnVarNameInTable="columnEventID" msprop:Generator_ColumnPropNameInRow="EventID" msprop:Generator_ColumnPropNameInTable="EventIDColumn" msprop:Generator_UserColumnName="EventID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EquipmentID" msprop:Generator_ColumnVarNameInTable="columnEquipmentID" msprop:Generator_ColumnPropNameInRow="EquipmentID" msprop:Generator_ColumnPropNameInTable="EquipmentIDColumn" msprop:Generator_UserColumnName="EquipmentID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="InstallDateFrom" msprop:Generator_ColumnVarNameInTable="columnInstallDateFrom" msprop:Generator_ColumnPropNameInRow="InstallDateFrom" msprop:Generator_ColumnPropNameInTable="InstallDateFromColumn" msprop:Generator_UserColumnName="InstallDateFrom" type="xs:dateTime" />
              <xs:element name="InstallDateTo" msprop:Generator_ColumnVarNameInTable="columnInstallDateTo" msprop:Generator_ColumnPropNameInRow="InstallDateTo" msprop:Generator_ColumnPropNameInTable="InstallDateToColumn" msprop:Generator_UserColumnName="InstallDateTo" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Manager" msprop:Generator_TableClassName="ManagerDataTable" msprop:Generator_TableVarName="tableManager" msprop:Generator_TablePropName="Manager" msprop:Generator_RowDeletingName="ManagerRowDeleting" msprop:Generator_RowChangingName="ManagerRowChanging" msprop:Generator_RowEvHandlerName="ManagerRowChangeEventHandler" msprop:Generator_RowDeletedName="ManagerRowDeleted" msprop:Generator_UserTableName="Manager" msprop:Generator_RowChangedName="ManagerRowChanged" msprop:Generator_RowEvArgName="ManagerRowChangeEvent" msprop:Generator_RowClassName="ManagerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ManagerID" msprop:Generator_ColumnVarNameInTable="columnManagerID" msprop:Generator_ColumnPropNameInRow="ManagerID" msprop:Generator_ColumnPropNameInTable="ManagerIDColumn" msprop:Generator_UserColumnName="ManagerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerFirstName" msprop:Generator_ColumnVarNameInTable="columnManagerFirstName" msprop:Generator_ColumnPropNameInRow="ManagerFirstName" msprop:Generator_ColumnPropNameInTable="ManagerFirstNameColumn" msprop:Generator_UserColumnName="ManagerFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerLastName" msprop:Generator_ColumnVarNameInTable="columnManagerLastName" msprop:Generator_ColumnPropNameInRow="ManagerLastName" msprop:Generator_ColumnPropNameInTable="ManagerLastNameColumn" msprop:Generator_UserColumnName="ManagerLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerEmail" msprop:Generator_ColumnVarNameInTable="columnManagerEmail" msprop:Generator_ColumnPropNameInRow="ManagerEmail" msprop:Generator_ColumnPropNameInTable="ManagerEmailColumn" msprop:Generator_UserColumnName="ManagerEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerPhone" msprop:Generator_ColumnVarNameInTable="columnManagerPhone" msprop:Generator_ColumnPropNameInRow="ManagerPhone" msprop:Generator_ColumnPropNameInTable="ManagerPhoneColumn" msprop:Generator_UserColumnName="ManagerPhone">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerFullName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnManagerFullName" msprop:Generator_ColumnPropNameInRow="ManagerFullName" msprop:Generator_ColumnPropNameInTable="ManagerFullNameColumn" msprop:Generator_UserColumnName="ManagerFullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Performer" msprop:Generator_TableClassName="PerformerDataTable" msprop:Generator_TableVarName="tablePerformer" msprop:Generator_TablePropName="Performer" msprop:Generator_RowDeletingName="PerformerRowDeleting" msprop:Generator_RowChangingName="PerformerRowChanging" msprop:Generator_RowEvHandlerName="PerformerRowChangeEventHandler" msprop:Generator_RowDeletedName="PerformerRowDeleted" msprop:Generator_UserTableName="Performer" msprop:Generator_RowChangedName="PerformerRowChanged" msprop:Generator_RowEvArgName="PerformerRowChangeEvent" msprop:Generator_RowClassName="PerformerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PerformerID" msprop:Generator_ColumnVarNameInTable="columnPerformerID" msprop:Generator_ColumnPropNameInRow="PerformerID" msprop:Generator_ColumnPropNameInTable="PerformerIDColumn" msprop:Generator_UserColumnName="PerformerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PerformerName" msprop:Generator_ColumnVarNameInTable="columnPerformerName" msprop:Generator_ColumnPropNameInRow="PerformerName" msprop:Generator_ColumnPropNameInTable="PerformerNameColumn" msprop:Generator_UserColumnName="PerformerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PerformerRating" msprop:Generator_ColumnVarNameInTable="columnPerformerRating" msprop:Generator_ColumnPropNameInRow="PerformerRating" msprop:Generator_ColumnPropNameInTable="PerformerRatingColumn" msprop:Generator_UserColumnName="PerformerRating" type="xs:int" minOccurs="0" />
              <xs:element name="PerformerCost" msprop:Generator_ColumnVarNameInTable="columnPerformerCost" msprop:Generator_ColumnPropNameInRow="PerformerCost" msprop:Generator_ColumnPropNameInTable="PerformerCostColumn" msprop:Generator_UserColumnName="PerformerCost" type="xs:decimal" />
              <xs:element name="PerformerEmail" msprop:Generator_ColumnVarNameInTable="columnPerformerEmail" msprop:Generator_ColumnPropNameInRow="PerformerEmail" msprop:Generator_ColumnPropNameInTable="PerformerEmailColumn" msprop:Generator_UserColumnName="PerformerEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Worker" msprop:Generator_TableClassName="WorkerDataTable" msprop:Generator_TableVarName="tableWorker" msprop:Generator_TablePropName="Worker" msprop:Generator_RowDeletingName="WorkerRowDeleting" msprop:Generator_RowChangingName="WorkerRowChanging" msprop:Generator_RowEvHandlerName="WorkerRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkerRowDeleted" msprop:Generator_UserTableName="Worker" msprop:Generator_RowChangedName="WorkerRowChanged" msprop:Generator_RowEvArgName="WorkerRowChangeEvent" msprop:Generator_RowClassName="WorkerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkerID" msprop:Generator_ColumnVarNameInTable="columnWorkerID" msprop:Generator_ColumnPropNameInRow="WorkerID" msprop:Generator_ColumnPropNameInTable="WorkerIDColumn" msprop:Generator_UserColumnName="WorkerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerFirstName" msprop:Generator_ColumnVarNameInTable="columnWorkerFirstName" msprop:Generator_ColumnPropNameInRow="WorkerFirstName" msprop:Generator_ColumnPropNameInTable="WorkerFirstNameColumn" msprop:Generator_UserColumnName="WorkerFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerLastName" msprop:Generator_ColumnVarNameInTable="columnWorkerLastName" msprop:Generator_ColumnPropNameInRow="WorkerLastName" msprop:Generator_ColumnPropNameInTable="WorkerLastNameColumn" msprop:Generator_UserColumnName="WorkerLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerSalary" msprop:Generator_ColumnVarNameInTable="columnWorkerSalary" msprop:Generator_ColumnPropNameInRow="WorkerSalary" msprop:Generator_ColumnPropNameInTable="WorkerSalaryColumn" msprop:Generator_UserColumnName="WorkerSalary" type="xs:decimal" />
              <xs:element name="WorkerEmail" msprop:Generator_ColumnVarNameInTable="columnWorkerEmail" msprop:Generator_ColumnPropNameInRow="WorkerEmail" msprop:Generator_ColumnPropNameInTable="WorkerEmailColumn" msprop:Generator_UserColumnName="WorkerEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerFullName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnWorkerFullName" msprop:Generator_ColumnPropNameInRow="WorkerFullName" msprop:Generator_ColumnPropNameInTable="WorkerFullNameColumn" msprop:Generator_UserColumnName="WorkerFullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerPhoto" msprop:Generator_ColumnVarNameInTable="columnWorkerPhoto" msprop:Generator_ColumnPropNameInRow="WorkerPhoto" msprop:Generator_ColumnPropNameInTable="WorkerPhotoColumn" msprop:Generator_UserColumnName="WorkerPhoto" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vw_EventVarCost" msprop:Generator_TableClassName="vw_EventVarCostDataTable" msprop:Generator_TableVarName="tablevw_EventVarCost" msprop:Generator_TablePropName="vw_EventVarCost" msprop:Generator_RowDeletingName="vw_EventVarCostRowDeleting" msprop:Generator_RowChangingName="vw_EventVarCostRowChanging" msprop:Generator_RowEvHandlerName="vw_EventVarCostRowChangeEventHandler" msprop:Generator_RowDeletedName="vw_EventVarCostRowDeleted" msprop:Generator_UserTableName="vw_EventVarCost" msprop:Generator_RowChangedName="vw_EventVarCostRowChanged" msprop:Generator_RowEvArgName="vw_EventVarCostRowChangeEvent" msprop:Generator_RowClassName="vw_EventVarCostRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Manager_x0020_Name" msprop:Generator_ColumnVarNameInTable="columnManager_Name" msprop:Generator_ColumnPropNameInRow="Manager_Name" msprop:Generator_ColumnPropNameInTable="Manager_NameColumn" msprop:Generator_UserColumnName="Manager Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventName" msprop:Generator_ColumnVarNameInTable="columnEventName" msprop:Generator_ColumnPropNameInRow="EventName" msprop:Generator_ColumnPropNameInTable="EventNameColumn" msprop:Generator_UserColumnName="EventName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventStartDate" msprop:Generator_ColumnVarNameInTable="columnEventStartDate" msprop:Generator_ColumnPropNameInRow="EventStartDate" msprop:Generator_ColumnPropNameInTable="EventStartDateColumn" msprop:Generator_UserColumnName="EventStartDate" type="xs:dateTime" />
              <xs:element name="EventEndDate" msprop:Generator_ColumnVarNameInTable="columnEventEndDate" msprop:Generator_ColumnPropNameInRow="EventEndDate" msprop:Generator_ColumnPropNameInTable="EventEndDateColumn" msprop:Generator_UserColumnName="EventEndDate" type="xs:dateTime" />
              <xs:element name="Number_x0020_of_x0020_Days" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnNumber_of_Days" msprop:Generator_ColumnPropNameInRow="Number_of_Days" msprop:Generator_ColumnPropNameInTable="Number_of_DaysColumn" msprop:Generator_UserColumnName="Number of Days" type="xs:int" minOccurs="0" />
              <xs:element name="Number_x0020_of_x0020_Workers" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnNumber_of_Workers" msprop:Generator_ColumnPropNameInRow="Number_of_Workers" msprop:Generator_ColumnPropNameInTable="Number_of_WorkersColumn" msprop:Generator_UserColumnName="Number of Workers" type="xs:int" minOccurs="0" />
              <xs:element name="Worker_x0020_Cost" msprop:Generator_ColumnVarNameInTable="columnWorker_Cost" msprop:Generator_ColumnPropNameInRow="Worker_Cost" msprop:Generator_ColumnPropNameInTable="Worker_CostColumn" msprop:Generator_UserColumnName="Worker Cost" type="xs:decimal" minOccurs="0" />
              <xs:element name="Number_x0020_of_x0020_Performers" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnNumber_of_Performers" msprop:Generator_ColumnPropNameInRow="Number_of_Performers" msprop:Generator_ColumnPropNameInTable="Number_of_PerformersColumn" msprop:Generator_UserColumnName="Number of Performers" type="xs:int" minOccurs="0" />
              <xs:element name="Performer_x0020_Cost" msprop:Generator_ColumnVarNameInTable="columnPerformer_Cost" msprop:Generator_ColumnPropNameInRow="Performer_Cost" msprop:Generator_ColumnPropNameInTable="Performer_CostColumn" msprop:Generator_UserColumnName="Performer Cost" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WorkerView" msprop:Generator_TableClassName="WorkerViewDataTable" msprop:Generator_TableVarName="tableWorkerView" msprop:Generator_TablePropName="WorkerView" msprop:Generator_RowDeletingName="WorkerViewRowDeleting" msprop:Generator_RowChangingName="WorkerViewRowChanging" msprop:Generator_RowEvHandlerName="WorkerViewRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkerViewRowDeleted" msprop:Generator_UserTableName="WorkerView" msprop:Generator_RowChangedName="WorkerViewRowChanged" msprop:Generator_RowEvArgName="WorkerViewRowChangeEvent" msprop:Generator_RowClassName="WorkerViewRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkerID" msprop:Generator_ColumnVarNameInTable="columnWorkerID" msprop:Generator_ColumnPropNameInRow="WorkerID" msprop:Generator_ColumnPropNameInTable="WorkerIDColumn" msprop:Generator_UserColumnName="WorkerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerFirstName" msprop:Generator_ColumnVarNameInTable="columnWorkerFirstName" msprop:Generator_ColumnPropNameInRow="WorkerFirstName" msprop:Generator_ColumnPropNameInTable="WorkerFirstNameColumn" msprop:Generator_UserColumnName="WorkerFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerLastName" msprop:Generator_ColumnVarNameInTable="columnWorkerLastName" msprop:Generator_ColumnPropNameInRow="WorkerLastName" msprop:Generator_ColumnPropNameInTable="WorkerLastNameColumn" msprop:Generator_UserColumnName="WorkerLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WorkerEmail" msprop:Generator_ColumnVarNameInTable="columnWorkerEmail" msprop:Generator_ColumnPropNameInRow="WorkerEmail" msprop:Generator_ColumnPropNameInTable="WorkerEmailColumn" msprop:Generator_UserColumnName="WorkerEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MonthlyIncomeStatement" msprop:Generator_TableClassName="MonthlyIncomeStatementDataTable" msprop:Generator_TableVarName="tableMonthlyIncomeStatement" msprop:Generator_TablePropName="MonthlyIncomeStatement" msprop:Generator_RowDeletingName="MonthlyIncomeStatementRowDeleting" msprop:Generator_RowChangingName="MonthlyIncomeStatementRowChanging" msprop:Generator_RowEvHandlerName="MonthlyIncomeStatementRowChangeEventHandler" msprop:Generator_RowDeletedName="MonthlyIncomeStatementRowDeleted" msprop:Generator_UserTableName="MonthlyIncomeStatement" msprop:Generator_RowChangedName="MonthlyIncomeStatementRowChanged" msprop:Generator_RowEvArgName="MonthlyIncomeStatementRowChangeEvent" msprop:Generator_RowClassName="MonthlyIncomeStatementRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Revenue" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnRevenue" msprop:Generator_ColumnPropNameInRow="Revenue" msprop:Generator_ColumnPropNameInTable="RevenueColumn" msprop:Generator_UserColumnName="Revenue" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="31" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expenses" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnExpenses" msprop:Generator_ColumnPropNameInRow="Expenses" msprop:Generator_ColumnPropNameInTable="ExpensesColumn" msprop:Generator_UserColumnName="Expenses" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="31" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Net" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnNet" msprop:Generator_ColumnPropNameInRow="Net" msprop:Generator_ColumnPropNameInTable="NetColumn" msprop:Generator_UserColumnName="Net" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="31" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SalaryPayable" msprop:Generator_TableClassName="SalaryPayableDataTable" msprop:Generator_TableVarName="tableSalaryPayable" msprop:Generator_TablePropName="SalaryPayable" msprop:Generator_RowDeletingName="SalaryPayableRowDeleting" msprop:Generator_RowChangingName="SalaryPayableRowChanging" msprop:Generator_RowEvHandlerName="SalaryPayableRowChangeEventHandler" msprop:Generator_RowDeletedName="SalaryPayableRowDeleted" msprop:Generator_UserTableName="SalaryPayable" msprop:Generator_RowChangedName="SalaryPayableRowChanged" msprop:Generator_RowEvArgName="SalaryPayableRowChangeEvent" msprop:Generator_RowClassName="SalaryPayableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Worker_x0020_Name" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnWorker_Name" msprop:Generator_ColumnPropNameInRow="Worker_Name" msprop:Generator_ColumnPropNameInTable="Worker_NameColumn" msprop:Generator_UserColumnName="Worker Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventName" msprop:Generator_ColumnVarNameInTable="columnEventName" msprop:Generator_ColumnPropNameInRow="EventName" msprop:Generator_ColumnPropNameInTable="EventNameColumn" msprop:Generator_UserColumnName="EventName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AssignmentDateFrom" msprop:Generator_ColumnVarNameInTable="columnAssignmentDateFrom" msprop:Generator_ColumnPropNameInRow="AssignmentDateFrom" msprop:Generator_ColumnPropNameInTable="AssignmentDateFromColumn" msprop:Generator_UserColumnName="AssignmentDateFrom" type="xs:dateTime" />
              <xs:element name="AssignmentDateTo" msprop:Generator_ColumnVarNameInTable="columnAssignmentDateTo" msprop:Generator_ColumnPropNameInRow="AssignmentDateTo" msprop:Generator_ColumnPropNameInTable="AssignmentDateToColumn" msprop:Generator_UserColumnName="AssignmentDateTo" type="xs:dateTime" />
              <xs:element name="SalaryPayable" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSalaryPayable" msprop:Generator_ColumnPropNameInRow="SalaryPayable" msprop:Generator_ColumnPropNameInTable="SalaryPayableColumn" msprop:Generator_UserColumnName="SalaryPayable" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="31" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Usernamepass" msprop:Generator_TableClassName="UsernamepassDataTable" msprop:Generator_TableVarName="tableUsernamepass" msprop:Generator_TablePropName="Usernamepass" msprop:Generator_RowDeletingName="UsernamepassRowDeleting" msprop:Generator_RowChangingName="UsernamepassRowChanging" msprop:Generator_RowEvHandlerName="UsernamepassRowChangeEventHandler" msprop:Generator_RowDeletedName="UsernamepassRowDeleted" msprop:Generator_UserTableName="Usernamepass" msprop:Generator_RowChangedName="UsernamepassRowChanged" msprop:Generator_RowEvArgName="UsernamepassRowChangeEvent" msprop:Generator_RowClassName="UsernamepassRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Position" msprop:Generator_ColumnVarNameInTable="columnPosition" msprop:Generator_ColumnPropNameInRow="Position" msprop:Generator_ColumnPropNameInTable="PositionColumn" msprop:Generator_UserColumnName="Position">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Assignment1" msprop:Generator_TableClassName="Assignment1DataTable" msprop:Generator_TableVarName="tableAssignment1" msprop:Generator_TablePropName="Assignment1" msprop:Generator_RowDeletingName="Assignment1RowDeleting" msprop:Generator_RowChangingName="Assignment1RowChanging" msprop:Generator_RowEvHandlerName="Assignment1RowChangeEventHandler" msprop:Generator_RowDeletedName="Assignment1RowDeleted" msprop:Generator_UserTableName="Assignment1" msprop:Generator_RowChangedName="Assignment1RowChanged" msprop:Generator_RowEvArgName="Assignment1RowChangeEvent" msprop:Generator_RowClassName="Assignment1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkerName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnWorkerName" msprop:Generator_ColumnPropNameInRow="WorkerName" msprop:Generator_ColumnPropNameInTable="WorkerNameColumn" msprop:Generator_UserColumnName="WorkerName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AssignmentDateFrom" msprop:Generator_ColumnVarNameInTable="columnAssignmentDateFrom" msprop:Generator_ColumnPropNameInRow="AssignmentDateFrom" msprop:Generator_ColumnPropNameInTable="AssignmentDateFromColumn" msprop:Generator_UserColumnName="AssignmentDateFrom" type="xs:dateTime" />
              <xs:element name="AssignmentDateTo" msprop:Generator_ColumnVarNameInTable="columnAssignmentDateTo" msprop:Generator_ColumnPropNameInRow="AssignmentDateTo" msprop:Generator_ColumnPropNameInTable="AssignmentDateToColumn" msprop:Generator_UserColumnName="AssignmentDateTo" type="xs:dateTime" />
              <xs:element name="ManagerName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnManagerName" msprop:Generator_ColumnPropNameInRow="ManagerName" msprop:Generator_ColumnPropNameInTable="ManagerNameColumn" msprop:Generator_UserColumnName="ManagerName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SalaryPayable" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSalaryPayable" msprop:Generator_ColumnPropNameInRow="SalaryPayable" msprop:Generator_ColumnPropNameInTable="SalaryPayableColumn" msprop:Generator_UserColumnName="SalaryPayable" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Performer1" msprop:Generator_TableClassName="Performer1DataTable" msprop:Generator_TableVarName="tablePerformer1" msprop:Generator_RowChangedName="Performer1RowChanged" msprop:Generator_TablePropName="Performer1" msprop:Generator_RowDeletingName="Performer1RowDeleting" msprop:Generator_RowChangingName="Performer1RowChanging" msprop:Generator_RowEvHandlerName="Performer1RowChangeEventHandler" msprop:Generator_RowDeletedName="Performer1RowDeleted" msprop:Generator_RowClassName="Performer1Row" msprop:Generator_UserTableName="Performer1" msprop:Generator_RowEvArgName="Performer1RowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PerformerID" msprop:Generator_ColumnVarNameInTable="columnPerformerID" msprop:Generator_ColumnPropNameInRow="PerformerID" msprop:Generator_ColumnPropNameInTable="PerformerIDColumn" msprop:Generator_UserColumnName="PerformerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PerformerName" msprop:Generator_ColumnVarNameInTable="columnPerformerName" msprop:Generator_ColumnPropNameInRow="PerformerName" msprop:Generator_ColumnPropNameInTable="PerformerNameColumn" msprop:Generator_UserColumnName="PerformerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PerformerRating" msprop:Generator_ColumnVarNameInTable="columnPerformerRating" msprop:Generator_ColumnPropNameInRow="PerformerRating" msprop:Generator_ColumnPropNameInTable="PerformerRatingColumn" msprop:Generator_UserColumnName="PerformerRating" type="xs:int" minOccurs="0" />
              <xs:element name="PerformerEmail" msprop:Generator_ColumnVarNameInTable="columnPerformerEmail" msprop:Generator_ColumnPropNameInRow="PerformerEmail" msprop:Generator_ColumnPropNameInTable="PerformerEmailColumn" msprop:Generator_UserColumnName="PerformerEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PerformerCost" msprop:Generator_ColumnVarNameInTable="columnPerformerCost" msprop:Generator_ColumnPropNameInRow="PerformerCost" msprop:Generator_ColumnPropNameInTable="PerformerCostColumn" msprop:Generator_UserColumnName="PerformerCost" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Event1" msprop:Generator_TableClassName="Event1DataTable" msprop:Generator_TableVarName="tableEvent1" msprop:Generator_RowChangedName="Event1RowChanged" msprop:Generator_TablePropName="Event1" msprop:Generator_RowDeletingName="Event1RowDeleting" msprop:Generator_RowChangingName="Event1RowChanging" msprop:Generator_RowEvHandlerName="Event1RowChangeEventHandler" msprop:Generator_RowDeletedName="Event1RowDeleted" msprop:Generator_RowClassName="Event1Row" msprop:Generator_UserTableName="Event1" msprop:Generator_RowEvArgName="Event1RowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EventID" msprop:Generator_ColumnVarNameInTable="columnEventID" msprop:Generator_ColumnPropNameInRow="EventID" msprop:Generator_ColumnPropNameInTable="EventIDColumn" msprop:Generator_UserColumnName="EventID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventName" msprop:Generator_ColumnVarNameInTable="columnEventName" msprop:Generator_ColumnPropNameInRow="EventName" msprop:Generator_ColumnPropNameInTable="EventNameColumn" msprop:Generator_UserColumnName="EventName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Manager" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnManager" msprop:Generator_ColumnPropNameInRow="Manager" msprop:Generator_ColumnPropNameInTable="ManagerColumn" msprop:Generator_UserColumnName="Manager" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="61" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventStartDate" msprop:Generator_ColumnVarNameInTable="columnEventStartDate" msprop:Generator_ColumnPropNameInRow="EventStartDate" msprop:Generator_ColumnPropNameInTable="EventStartDateColumn" msprop:Generator_UserColumnName="EventStartDate" type="xs:dateTime" />
              <xs:element name="EventEndDate" msprop:Generator_ColumnVarNameInTable="columnEventEndDate" msprop:Generator_ColumnPropNameInRow="EventEndDate" msprop:Generator_ColumnPropNameInTable="EventEndDateColumn" msprop:Generator_UserColumnName="EventEndDate" type="xs:dateTime" />
              <xs:element name="SumOfEventPrice" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSumOfEventPrice" msprop:Generator_ColumnPropNameInRow="SumOfEventPrice" msprop:Generator_ColumnPropNameInTable="SumOfEventPriceColumn" msprop:Generator_UserColumnName="SumOfEventPrice" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Customer1" msprop:Generator_TableClassName="Customer1DataTable" msprop:Generator_TableVarName="tableCustomer1" msprop:Generator_RowChangedName="Customer1RowChanged" msprop:Generator_TablePropName="Customer1" msprop:Generator_RowDeletingName="Customer1RowDeleting" msprop:Generator_RowChangingName="Customer1RowChanging" msprop:Generator_RowEvHandlerName="Customer1RowChangeEventHandler" msprop:Generator_RowDeletedName="Customer1RowDeleted" msprop:Generator_RowClassName="Customer1Row" msprop:Generator_UserTableName="Customer1" msprop:Generator_RowEvArgName="Customer1RowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CustName" msprop:Generator_ColumnVarNameInTable="columnCustName" msprop:Generator_ColumnPropNameInRow="CustName" msprop:Generator_ColumnPropNameInTable="CustNameColumn" msprop:Generator_UserColumnName="CustName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CustPhone" msprop:Generator_ColumnVarNameInTable="columnCustPhone" msprop:Generator_ColumnPropNameInRow="CustPhone" msprop:Generator_ColumnPropNameInTable="CustPhoneColumn" msprop:Generator_UserColumnName="CustPhone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="14" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AmountSpent" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAmountSpent" msprop:Generator_ColumnPropNameInRow="AmountSpent" msprop:Generator_ColumnPropNameInTable="AmountSpentColumn" msprop:Generator_UserColumnName="AmountSpent" type="xs:decimal" minOccurs="0" />
              <xs:element name="CustEmail" msprop:Generator_ColumnVarNameInTable="columnCustEmail" msprop:Generator_ColumnPropNameInRow="CustEmail" msprop:Generator_ColumnPropNameInTable="CustEmailColumn" msprop:Generator_UserColumnName="CustEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Event2" msprop:Generator_TableClassName="Event2DataTable" msprop:Generator_TableVarName="tableEvent2" msprop:Generator_TablePropName="Event2" msprop:Generator_RowDeletingName="Event2RowDeleting" msprop:Generator_RowChangingName="Event2RowChanging" msprop:Generator_RowEvHandlerName="Event2RowChangeEventHandler" msprop:Generator_RowDeletedName="Event2RowDeleted" msprop:Generator_UserTableName="Event2" msprop:Generator_RowChangedName="Event2RowChanged" msprop:Generator_RowEvArgName="Event2RowChangeEvent" msprop:Generator_RowClassName="Event2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TownSum" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTownSum" msprop:Generator_ColumnPropNameInRow="TownSum" msprop:Generator_ColumnPropNameInTable="TownSumColumn" msprop:Generator_UserColumnName="TownSum" type="xs:decimal" minOccurs="0" />
              <xs:element name="EventCity" msprop:Generator_ColumnVarNameInTable="columnEventCity" msprop:Generator_ColumnPropNameInRow="EventCity" msprop:Generator_ColumnPropNameInTable="EventCityColumn" msprop:Generator_UserColumnName="EventCity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EventsPerCity" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnEventsPerCity" msprop:Generator_ColumnPropNameInRow="EventsPerCity" msprop:Generator_ColumnPropNameInTable="EventsPerCityColumn" msprop:Generator_UserColumnName="EventsPerCity" type="xs:int" minOccurs="0" />
              <xs:element name="AvgSpendingPerEvent" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAvgSpendingPerEvent" msprop:Generator_ColumnPropNameInRow="AvgSpendingPerEvent" msprop:Generator_ColumnPropNameInTable="AvgSpendingPerEventColumn" msprop:Generator_UserColumnName="AvgSpendingPerEvent" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Assignment" />
      <xs:field xpath="mstns:ManagerID" />
      <xs:field xpath="mstns:WorkerID" />
      <xs:field xpath="mstns:AssignmentDateFrom" />
      <xs:field xpath="mstns:AssignmentDateTo" />
    </xs:unique>
    <xs:unique name="Book_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Book" />
      <xs:field xpath="mstns:EventID" />
      <xs:field xpath="mstns:PerformerID" />
      <xs:field xpath="mstns:BookDateFrom" />
      <xs:field xpath="mstns:BookDateTo" />
    </xs:unique>
    <xs:unique name="Customer_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Customer" />
      <xs:field xpath="mstns:CustomerID" />
    </xs:unique>
    <xs:unique name="Equipment_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Equipment" />
      <xs:field xpath="mstns:EquipmentID" />
    </xs:unique>
    <xs:unique name="Event_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Event" />
      <xs:field xpath="mstns:EventID" />
    </xs:unique>
    <xs:unique name="Install_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Install" />
      <xs:field xpath="mstns:EventID" />
      <xs:field xpath="mstns:EquipmentID" />
      <xs:field xpath="mstns:InstallDateFrom" />
      <xs:field xpath="mstns:InstallDateTo" />
    </xs:unique>
    <xs:unique name="Manager_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Manager" />
      <xs:field xpath="mstns:ManagerID" />
    </xs:unique>
    <xs:unique name="Performer_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Performer" />
      <xs:field xpath="mstns:PerformerID" />
    </xs:unique>
    <xs:unique name="Worker_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Worker" />
      <xs:field xpath="mstns:WorkerID" />
    </xs:unique>
    <xs:unique name="WorkerView_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WorkerView" />
      <xs:field xpath="mstns:WorkerID" />
    </xs:unique>
    <xs:unique name="Usernamepass_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Usernamepass" />
      <xs:field xpath="mstns:Username" />
    </xs:unique>
    <xs:unique name="Performer1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Performer1" />
      <xs:field xpath="mstns:PerformerID" />
    </xs:unique>
    <xs:unique name="Event1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Event1" />
      <xs:field xpath="mstns:EventID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_ManagerID" msdata:parent="Manager" msdata:child="Assignment" msdata:parentkey="ManagerID" msdata:childkey="ManagerID" msprop:Generator_UserChildTable="Assignment" msprop:Generator_ChildPropName="GetAssignmentRows" msprop:Generator_UserRelationName="fk_ManagerID" msprop:Generator_RelationVarName="relationfk_ManagerID" msprop:Generator_UserParentTable="Manager" msprop:Generator_ParentPropName="ManagerRow" />
      <msdata:Relationship name="fk_WorkerID" msdata:parent="Worker" msdata:child="Assignment" msdata:parentkey="WorkerID" msdata:childkey="WorkerID" msprop:Generator_UserChildTable="Assignment" msprop:Generator_ChildPropName="GetAssignmentRows" msprop:Generator_UserRelationName="fk_WorkerID" msprop:Generator_RelationVarName="relationfk_WorkerID" msprop:Generator_UserParentTable="Worker" msprop:Generator_ParentPropName="WorkerRow" />
      <msdata:Relationship name="fk_EventID1" msdata:parent="Event" msdata:child="Book" msdata:parentkey="EventID" msdata:childkey="EventID" msprop:Generator_UserChildTable="Book" msprop:Generator_ChildPropName="GetBookRows" msprop:Generator_UserRelationName="fk_EventID1" msprop:Generator_RelationVarName="relationfk_EventID1" msprop:Generator_UserParentTable="Event" msprop:Generator_ParentPropName="EventRow" />
      <msdata:Relationship name="fk_PerformerID" msdata:parent="Performer" msdata:child="Book" msdata:parentkey="PerformerID" msdata:childkey="PerformerID" msprop:Generator_UserChildTable="Book" msprop:Generator_ChildPropName="GetBookRows" msprop:Generator_UserRelationName="fk_PerformerID" msprop:Generator_RelationVarName="relationfk_PerformerID" msprop:Generator_UserParentTable="Performer" msprop:Generator_ParentPropName="PerformerRow" />
      <msdata:Relationship name="fk_Customer" msdata:parent="Customer" msdata:child="Event" msdata:parentkey="CustomerID" msdata:childkey="CustomerID" msprop:Generator_UserChildTable="Event" msprop:Generator_ChildPropName="GetEventRows" msprop:Generator_UserRelationName="fk_Customer" msprop:Generator_ParentPropName="CustomerRow" msprop:Generator_RelationVarName="relationfk_Customer" msprop:Generator_UserParentTable="Customer" />
      <msdata:Relationship name="fk_Manager" msdata:parent="Manager" msdata:child="Event" msdata:parentkey="ManagerID" msdata:childkey="ManagerID" msprop:Generator_UserChildTable="Event" msprop:Generator_ChildPropName="GetEventRows" msprop:Generator_UserRelationName="fk_Manager" msprop:Generator_RelationVarName="relationfk_Manager" msprop:Generator_UserParentTable="Manager" msprop:Generator_ParentPropName="ManagerRow" />
      <msdata:Relationship name="fk_EquipmentID" msdata:parent="Equipment" msdata:child="Install" msdata:parentkey="EquipmentID" msdata:childkey="EquipmentID" msprop:Generator_UserChildTable="Install" msprop:Generator_ChildPropName="GetInstallRows" msprop:Generator_UserRelationName="fk_EquipmentID" msprop:Generator_ParentPropName="EquipmentRow" msprop:Generator_RelationVarName="relationfk_EquipmentID" msprop:Generator_UserParentTable="Equipment" />
      <msdata:Relationship name="fk_EventID2" msdata:parent="Event" msdata:child="Install" msdata:parentkey="EventID" msdata:childkey="EventID" msprop:Generator_UserChildTable="Install" msprop:Generator_ChildPropName="GetInstallRows" msprop:Generator_UserRelationName="fk_EventID2" msprop:Generator_ParentPropName="EventRow" msprop:Generator_RelationVarName="relationfk_EventID2" msprop:Generator_UserParentTable="Event" />
      <msdata:Relationship name="fk_PerformerID1" msdata:parent="Performer1" msdata:child="Book" msdata:parentkey="PerformerID" msdata:childkey="PerformerID" msprop:Generator_UserChildTable="Book" msprop:Generator_ChildPropName="GetBookRows" msprop:Generator_UserRelationName="fk_PerformerID1" msprop:Generator_ParentPropName="Performer1Row" msprop:Generator_RelationVarName="relationfk_PerformerID1" msprop:Generator_UserParentTable="Performer1" />
      <msdata:Relationship name="fk_EventID11" msdata:parent="Event1" msdata:child="Book" msdata:parentkey="EventID" msdata:childkey="EventID" msprop:Generator_UserChildTable="Book" msprop:Generator_ChildPropName="GetBookRows" msprop:Generator_UserRelationName="fk_EventID11" msprop:Generator_ParentPropName="Event1Row" msprop:Generator_RelationVarName="relationfk_EventID11" msprop:Generator_UserParentTable="Event1" />
      <msdata:Relationship name="fk_EventID21" msdata:parent="Event1" msdata:child="Install" msdata:parentkey="EventID" msdata:childkey="EventID" msprop:Generator_UserChildTable="Install" msprop:Generator_ChildPropName="GetInstallRows" msprop:Generator_UserRelationName="fk_EventID21" msprop:Generator_ParentPropName="Event1Row" msprop:Generator_RelationVarName="relationfk_EventID21" msprop:Generator_UserParentTable="Event1" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>